# Harbor Guard Environment Configuration
# Copy this file to .env and customize the values for your deployment

# ===== Database Configuration =====
# DATABASE_URL="postgresql://user:pass@localhost:5432/database?sslmode=disable"
# For PostgreSQL: DATABASE_URL="postgresql://username:password@host:port/database"
# For production: Use PostgreSQL with proper connection pooling

# ===== Harbor Guard Configuration =====

# Scanner Configuration
MAX_CONCURRENT_SCANS=3              # Prevent resource exhaustion (1-20)
SCAN_TIMEOUT_MINUTES=30             # Prevent hanging scans (5-180 minutes)
ENABLED_SCANNERS=trivy,grype,syft,dockle,osv,dive  # Available: trivy,grype,syft,dockle,osv,dive

# Logging
LOG_LEVEL=info                      # Options: debug, info, warn, error

# Maintenance  
CLEANUP_OLD_SCANS_DAYS=30          # Automatic database cleanup (1-365 days)

# Network
PORT=3000                          # Server port (1000-65535)
# HOSTNAME=0.0.0.0               # Server bind address (0.0.0.0 for all interfaces)

# Notifications (optional)
# Uncomment and configure webhook URLs for notifications
# TEAMS_WEBHOOK_URL=https://your-org.webhook.office.com/webhookb2/...
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...
# GOTIFY_SERVER_URL=https://gotify.example.com
# GOTIFY_APP_TOKEN=your-gotify-app-token
# APPRISE_API_URL=https://apprise.example.com
# APPRISE_CONFIG_KEY=optional-config-key
# APPRISE_URLS=service://url1,service://url2  # Optional: specific notification URLs
NOTIFY_ON_HIGH_SEVERITY=true       # Send notifications for high/critical findings only

# Monitoring
HEALTH_CHECK_ENABLED=true          # Enable /api/health and /api/ready endpoints
VERSION_CHECK_ENABLED=true         # Enable automatic version checking for updates

# UI Configuration
ENABLE_RAW_OUTPUT=false            # Enable raw scanner output viewing in UI (true/false)

# ===== Production Recommendations =====
# 1. Use PostgreSQL for production deployments
# 2. Set MAX_CONCURRENT_SCANS based on available CPU/memory
# 3. Configure webhook notifications for security alerts
# 4. Enable health checks for load balancer integration
# 5. Set LOG_LEVEL=warn or LOG_LEVEL=error in production
# 6. Adjust CLEANUP_OLD_SCANS_DAYS based on compliance requirements

# ===== Docker Deployment =====
# When using Docker, you can override any of these variables:
# docker run -e PORT=8080 -e LOG_LEVEL=debug harborguard:latest

# ===== Kubernetes Deployment =====
# Create a ConfigMap or Secret with these environment variables:
# kubectl create configmap harborguard-config --from-env-file=.env