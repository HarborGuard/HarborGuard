"use client";

import React from "react";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  IconExternalLink,
  IconCopy,
  IconAlertTriangle,
  IconPackage,
  IconShieldCheck,
  IconClock,
  IconDatabase,
  IconFingerprint,
  IconLink,
} from "@tabler/icons-react";
import { toast } from "sonner";

interface VulnerabilityDetailModalProps {
  isOpen: boolean;
  onClose: () => void;
  vulnerability: any;
  classification?: any;
}

export function VulnerabilityDetailModal({
  isOpen,
  onClose,
  vulnerability,
  classification,
}: VulnerabilityDetailModalProps) {
  if (!vulnerability) return null;

  const copyToClipboard = (text: string, label: string) => {
    navigator.clipboard.writeText(text);
    toast.success(`${label} copied to clipboard`);
  };

  const getSeverityColor = (severity: string) => {
    const colors: Record<string, string> = {
      CRITICAL: "bg-red-500",
      HIGH: "bg-orange-500",
      MEDIUM: "bg-yellow-500",
      LOW: "bg-blue-500",
      INFO: "bg-gray-500",
    };
    return colors[severity?.toUpperCase()] || "bg-gray-500";
  };

  const formatDate = (date: string | Date | null) => {
    if (!date) return "N/A";
    return new Date(date).toLocaleString();
  };

  const renderValue = (value: any, defaultValue = "N/A"): string => {
    if (value === null || value === undefined || value === "")
      return defaultValue;
    if (typeof value === "object") return JSON.stringify(value, null, 2);
    return String(value);
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-hidden">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <IconAlertTriangle className="h-5 w-5" />
            Vulnerability Details: {vulnerability.cveId}
          </DialogTitle>
          <DialogDescription>
            Complete information about this vulnerability finding
          </DialogDescription>
        </DialogHeader>

        <ScrollArea className="h-[calc(90vh-8rem)] pr-4">
          <Tabs defaultValue="general" className="w-full">
            <TabsList className="grid w-full grid-cols-5">
              <TabsTrigger value="general">General</TabsTrigger>
              <TabsTrigger value="details">Details</TabsTrigger>
              <TabsTrigger value="references">References</TabsTrigger>
              <TabsTrigger value="metadata">Metadata</TabsTrigger>
              <TabsTrigger value="raw">Raw Data</TabsTrigger>
            </TabsList>

            <TabsContent value="general" className="space-y-4 mt-4">
              {/* Basic Information */}
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div className="flex flex-col">
                    <label className="text-sm font-medium text-muted-foreground">
                      CVE ID
                    </label>
                    <div className="flex items-center gap-2 mt-1">
                      <code className="text-sm">{vulnerability.cveId}</code>
                      <Button
                        variant="ghost"
                        size="icon"
                        className="h-6 w-6"
                        onClick={() =>
                          copyToClipboard(vulnerability.cveId, "CVE ID")
                        }
                      >
                        <IconCopy className="h-3 w-3" />
                      </Button>
                    </div>
                  </div>

                  <div className="flex flex-col">
                    <label className="text-sm font-medium text-muted-foreground">
                      Severity
                    </label>
                    <div className="mt-1">
                      <Badge
                        className={`${getSeverityColor(
                          vulnerability.severity
                        )} text-white`}
                      >
                        {vulnerability.severity}
                      </Badge>
                    </div>
                  </div>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="flex flex-col">
                    <label className="text-sm font-medium text-muted-foreground">
                      Package
                    </label>
                    <div className="flex items-center gap-2 mt-1">
                      <IconPackage className="h-4 w-4 text-muted-foreground" />
                      <code className="text-sm">
                        {vulnerability.packageName}
                      </code>
                    </div>
                  </div>

                  <div className="flex flex-col">
                    <label className="text-sm font-medium text-muted-foreground">
                      Source Scanner
                    </label>
                    <div className="mt-1">
                      <Badge variant="outline">{vulnerability.source}</Badge>
                    </div>
                  </div>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="flex flex-col">
                    <label className="text-sm font-medium text-muted-foreground">
                      Installed Version
                    </label>
                    <code className="text-sm">
                      {renderValue(vulnerability.installedVersion)}
                    </code>
                  </div>

                  <div className="flex flex-col">
                    <label className="text-sm font-medium text-muted-foreground">
                      Fixed Version
                    </label>
                    <code className="text-sm text-green-600">
                      {renderValue(
                        vulnerability.fixedVersion,
                        "No fix available"
                      )}
                    </code>
                  </div>
                </div>

                {vulnerability.cvssScore && (
                  <div className="grid grid-cols-2 gap-4">
                    <div className="flex flex-col">
                      <label className="text-sm font-medium text-muted-foreground">
                        CVSS Score
                      </label>
                      <div className="text-2xl font-bold">
                        {vulnerability.cvssScore.toFixed(1)}
                      </div>
                    </div>

                    <div className="flex flex-col">
                      <label className="text-sm font-medium text-muted-foreground">
                        Data Source
                      </label>
                      <code className="text-sm">
                        {renderValue(vulnerability.dataSource)}
                      </code>
                    </div>
                  </div>
                )}

                {/* Classification Info */}
                {classification && (
                  <div className="border rounded-lg p-4 bg-muted/50">
                    <h3 className="text-sm font-semibold mb-2 flex items-center gap-2">
                      <IconShieldCheck className="h-4 w-4" />
                      Classification
                    </h3>
                    <div className="space-y-2">
                      <div className="flex flex-col">
                        <label className="text-sm text-muted-foreground">
                          Status
                        </label>
                        <div className="mt-1">
                          {classification.isFalsePositive ? (
                            <Badge variant="outline" className="bg-yellow-50">
                              False Positive
                            </Badge>
                          ) : (
                            <Badge variant="outline">Active</Badge>
                          )}
                        </div>
                      </div>
                      {classification.comment && (
                        <div className="flex flex-col">
                          <label className="text-sm text-muted-foreground">
                            Comment
                          </label>
                          <p className="text-sm mt-1">
                            {classification.comment}
                          </p>
                        </div>
                      )}
                      {classification.createdBy && (
                        <div className="flex flex-col">
                          <label className="text-sm text-muted-foreground">
                            Created By
                          </label>
                          <p className="text-sm mt-1">
                            {classification.createdBy}
                          </p>
                        </div>
                      )}
                    </div>
                  </div>
                )}
              </div>
            </TabsContent>

            <TabsContent value="details" className="space-y-4 mt-4">
              {vulnerability.title && (
                <div className="flex flex-col">
                  <label className="text-sm font-medium text-muted-foreground">
                    Title
                  </label>
                  <p className="text-sm mt-1">{vulnerability.title}</p>
                </div>
              )}

              {vulnerability.description && (
                <div>
                  <label className="text-sm font-medium text-muted-foreground">
                    Description
                  </label>
                  <p className="text-sm mt-1 whitespace-pre-wrap">
                    {vulnerability.description}
                  </p>
                </div>
              )}

              <div className="grid grid-cols-2 gap-4">
                <div className="flex flex-col">
                  <label className="text-sm font-medium text-muted-foreground">
                    Package Type
                  </label>
                  <code className="text-sm">
                    {renderValue(vulnerability.packageType)}
                  </code>
                </div>

                <div className="flex flex-col">
                  <label className="text-sm font-medium text-muted-foreground">
                    File Path
                  </label>
                  <code className="text-xs break-all">
                    {renderValue(vulnerability.filePath)}
                  </code>
                </div>
              </div>

              {vulnerability.layerId && (
                <div className="flex flex-col">
                  <label className="text-sm font-medium text-muted-foreground">
                    Layer ID
                  </label>
                  <code className="text-xs break-all">
                    {vulnerability.layerId}
                  </code>
                </div>
              )}

              <div className="grid grid-cols-2 gap-4">
                <div className="flex flex-col">
                  <label className="text-sm font-medium text-muted-foreground">
                    Published Date
                  </label>
                  <div className="flex items-center gap-2 mt-1">
                    <IconClock className="h-4 w-4 text-muted-foreground" />
                    <span className="text-sm">
                      {formatDate(vulnerability.publishedDate)}
                    </span>
                  </div>
                </div>

                <div className="flex flex-col">
                  <label className="text-sm font-medium text-muted-foreground">
                    Last Modified
                  </label>
                  <div className="flex items-center gap-2 mt-1">
                    <IconClock className="h-4 w-4 text-muted-foreground" />
                    <span className="text-sm">
                      {formatDate(vulnerability.lastModified)}
                    </span>
                  </div>
                </div>
              </div>

              <div className="grid grid-cols-2 gap-4">
                <div className="flex flex-col">
                  <label className="text-sm font-medium text-muted-foreground">
                    Created At
                  </label>
                  <span className="text-sm">
                    {formatDate(vulnerability.createdAt)}
                  </span>
                </div>

                <div className="flex flex-col">
                  <label className="text-sm font-medium text-muted-foreground">
                    Scan ID
                  </label>
                  <code className="text-xs">{vulnerability.scanId}</code>
                </div>
              </div>
            </TabsContent>

            <TabsContent value="references" className="space-y-4 mt-4">
              <div className="flex flex-col">
                <label className="text-sm font-medium text-muted-foreground mb-2 block">
                  Vulnerability URL
                </label>
                {vulnerability.vulnerabilityUrl && (
                  <a
                    href={vulnerability.vulnerabilityUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="flex items-center gap-2 text-sm text-blue-600 hover:underline"
                  >
                    <IconLink className="h-4 w-4" />
                    {vulnerability.vulnerabilityUrl}
                    <IconExternalLink className="h-3 w-3" />
                  </a>
                )}
              </div>

              {vulnerability.references &&
                vulnerability.references.length > 0 && (
                  <div>
                    <label className="text-sm font-medium text-muted-foreground mb-2 block">
                      Additional References
                    </label>
                    <div className="space-y-1">
                      {vulnerability.references.map(
                        (ref: string, index: number) => (
                          <a
                            key={index}
                            href={ref}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="flex items-center gap-2 text-sm text-blue-600 hover:underline"
                          >
                            <IconLink className="h-4 w-4" />
                            {ref}
                            <IconExternalLink className="h-3 w-3" />
                          </a>
                        )
                      )}
                    </div>
                  </div>
                )}
            </TabsContent>

            <TabsContent value="metadata" className="space-y-4 mt-4">
              <div>
                <label className="text-sm font-medium text-muted-foreground">
                  Database Record
                </label>
                <div className="mt-2 space-y-2">
                  <div className="flex items-center gap-2">
                    <IconFingerprint className="h-4 w-4 text-muted-foreground" />
                    <span className="text-sm">
                      <strong>ID:</strong> {vulnerability.id}
                    </span>
                  </div>
                  <div className="flex items-center gap-2">
                    <IconDatabase className="h-4 w-4 text-muted-foreground" />
                    <span className="text-sm">
                      <strong>Source:</strong> {vulnerability.source}
                    </span>
                  </div>
                </div>
              </div>

              {vulnerability.metadata && (
                <div>
                  <label className="text-sm font-medium text-muted-foreground">
                    Additional Metadata
                  </label>
                  <pre className="mt-2 p-3 bg-muted rounded-lg text-xs overflow-x-auto">
                    {JSON.stringify(vulnerability.metadata, null, 2)}
                  </pre>
                </div>
              )}
            </TabsContent>

            <TabsContent value="raw" className="mt-4">
              <div className="flex flex-col h-full max-w-[830px]">
                <label className="text-sm font-medium text-muted-foreground mb-2 block">
                  Complete Raw Finding Data
                </label>
                <pre className="p-3 bg-muted rounded-lg text-xs overflow-auto flex-1">
                  {JSON.stringify(
                    vulnerability.rawFinding || vulnerability,
                    null,
                    2
                  )}
                </pre>
              </div>
            </TabsContent>
          </Tabs>
        </ScrollArea>
      </DialogContent>
    </Dialog>
  );
}
